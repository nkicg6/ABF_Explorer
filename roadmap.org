#+OPTIONS: toc:nil author:nil title:nil date:nil num:nil ^:{} \n:1 todo:nil
#+PROPERTY: header-args :eval never-export

* Roadmap/plans
** =ABF_Explorer= deployment

*** pip
- =pip= installable, with few dependencies and reasonable command line options. 
  - *DONE* for local pip installs from from source (2020-08-06)
  - upload to pypi 
*** MacOS (=abf_explorer.app=) 
My main development machine is a Mac, so this has been the easiest for me to work on. 
- =make clean= removes =dist= and =build= directories
- =make spec= runs the pyinstaller to make a new spec file (don't use, added custom options)
- =make build_app= runs =pyinstaller= with =abf_explorer.spec= to build app
*** TODO Windows (=abf_explorer.exe=) 
Making this package easily installable without touching python is very important to me. Windows is harder because I have to find a Windows machine to work on it with, but it will happen. 
  - get working with local [[https://docs.python.org/3/library/venv.html][venv]] then port to windows. Make a batchfile installer similar to MacOS
*** Other experiments
- [[https://beeware.org/][BeeWare]] briefcase project may be easier to use. Uses [[https://briefcase.readthedocs.io/en/latest/how-to/upgrade-from-v0.2.html][pyproject.toml]] as the configuration file
** =ABF_Explorer= for analysis
- =ABF_Explorer= is meant to be a simple way to view patch clamp or extracellular electrophysiology data.
- Analysis needs are often complex and require experiment specific customization, so the scope of this project will remain focused on displaying =ABF= files and metadata.
- Future development may include a method for selecting regions of a sweep and exporting the selected regions for further custom analysis. 
* Development and design decisions
** testing 
- [[https://docs.pytest.org/en/latest/][pytest]] is used for testing. Run unit test by running =pytest= from the base directory.
** class interactions and inheritance
- Classes communicate exclusively with Qt signals/slots, passing pure data (typically python dictionaries, tuples, or strings). 
- Classes *should not* directly access fields or methods in other classes.
** Useful documentation and links
- https://pyside.github.io/docs/pyside/PySide/QtGui/QGridLayout.html#PySide.QtGui.PySide.QtGui.QGridLayout.setColumnMinimumWidth
- https://doc.qt.io/qtforpython/overviews/qtwidgets-tutorials-addressbook-part2-example.html
  
* TODO's
- replace =plotutils.io_gather_plot_data= with =abf.Abf.send_plot_data=
  - +abstract the file reading to a class?+
  - write more =abf.Abf= tests for =send_plot_data= method
  - remove =plotutils=
- Option to show all metadata in a window for a selected file in a nice way
- add copy region
  - +remove the LFP analysis package you have now and merge it into this generic one+
- docstrings!
- sphinx docs!
- Automate building of app on MacOS (In-progress)
  - add icon https://retifrav.github.io/blog/2018/10/09/macos-convert-png-to-icns/
- automate building of app on Windows
- setup tox for py3.7, py3.8
- +simplify app info flow+
- +upload to pypi+
- +use test fixtures for data validation+

* testing pypi
pip install --verbose -i https://test.pypi.org/simple/ abf-explorer==VERSION --extra-index-url https://pypi.org/simple
