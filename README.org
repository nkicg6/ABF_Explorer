#+OPTIONS: toc:nil author:nil title:nil date:nil num:nil ^:{} \n:1 todo:nil
#+PROPERTY: header-args :eval never-export

* ABF_Explorer

=ABF_Explorer= provides a *simple*, cross platform (shar-able) app for quickly viewing ABF files without a bunch of python/matlab/etc. boilerplate. Often I want to quickly look through some files or show someone an example, but I don't know exactly which file or sweep it is. This simple tool allows you to quickly scroll through files, read the metadata, and take a look at the data.

#+CAPTION: ABF_Explorer UI
#+ATTR_HTML: :width 50% :height 50% :alt  :title  :align 
#+ATTR_LATEX: :placement [H] :width 0.5\textwidth
[[file:docs/img/abfexplorer-example.png]]

We use the excellent pyABF package (https://github.com/swharden/pyABF) to do the hard work of parsing ABF files, Thanks [[https://github.com/swharden/][Scott!]]

** Useage

   *Currently in development*. To use, clone this repository, make a virtual environment, =cd= to the root of the cloned directory, and =pip install -e .=. Then you can run run =abf_explorer= from the project root. If you want to directly load a folder full of abf's at startup, use the =-d= or =--startup-dir= flag and pass the path to the directory.

#+BEGIN_SRC python :session new :results output
# after pip install:
abf_explorer -d path/to/abfs
#+END_SRC

* Roadmap/plans

** =ABF_Explorer= should be easy to both *share* and *use*
- =pip= installable, with few dependencies and reasonable command line options.
- Easy to share and use with non-programmers or people unfamiliar with the nightmare that is python packaging.
  - This means making a simple downloadable =app= or =exe=, likely with [[https://www.pyinstaller.org/][PyInstaller]], [[https://beeware.org/][BeeWare]], or a comparable tool.
  - Cross platform (Windows, Mac OS, and Linux)
- Keep it simple!
** =ABF_Explorer= for analysis
- =ABF_Explorer= is meant to be a simple way to view patch clamp or extracellular electrophysiology data.
- Analysis needs are often complex and require experiment specific customization, so the scope of this project will remain focused on displaying =ABF= files.
- Future development may include a method for selecting regions of a sweep and exporting the selected regions for further custom analysis. 
** =ABF_Explorer= for non-ABF files
- this may be supported in the future, or will at least be easy to extend 

* Development and design decisions
** testing 
- We use [[https://docs.pytest.org/en/latest/][pytest]]. Run unit test by running =pytest= from the base directory.
** class interactions and inheritance
- Classes communicate exclusively with Qt signals/slots, passing pure data (typically python dictionaries). 
- Classes should not directly access fields or methods in other classes.

** Useful documentation and links
- https://pyside.github.io/docs/pyside/PySide/QtGui/QGridLayout.html#PySide.QtGui.PySide.QtGui.QGridLayout.setColumnMinimumWidth
- https://doc.qt.io/qtforpython/overviews/qtwidgets-tutorials-addressbook-part2-example.html
  
